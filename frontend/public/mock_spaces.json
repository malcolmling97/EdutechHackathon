[
  {
    "id": "cloud-computing-notes",
    "type": "notes",
    "title": "Cloud Computing Notes",
    "folderId": "mock-folder",
    "settings": {},
    "data": {
      "content": "# ☁️ Intro to Cloud Computing\n\nCloud computing is the on-demand delivery of IT resources over the internet. Instead of owning and maintaining physical data centers, users can access computing services like servers, storage, and databases from cloud providers.\n\n## 🧠 Key Characteristics\n\n- **On-Demand Self-Service**: Users can provision resources as needed.\n- **Broad Network Access**: Services are available over the network and accessed through standard mechanisms.\n- **Resource Pooling**: Providers serve multiple customers using multi-tenant models.\n- **Rapid Elasticity**: Resources can be scaled up or down automatically.\n- **Measured Service**: Usage is monitored, controlled, and billed based on consumption.\n\n## 🏗️ Cloud Service Models\n\n- **IaaS (Infrastructure as a Service)**: Provides virtualized computing resources (e.g., AWS EC2, Azure VMs).\n- **PaaS (Platform as a Service)**: Offers a platform to develop, run, and manage applications (e.g., Google App Engine).\n- **SaaS (Software as a Service)**: Delivers software applications over the internet (e.g., Google Workspace, Salesforce).\n\n## 🌍 Deployment Models\n\n- **Public Cloud**: Services offered over the public internet.\n- **Private Cloud**: Cloud environment dedicated to a single organization.\n- **Hybrid Cloud**: Combines public and private cloud features.\n\n## 📦 Use Cases\n\n- Hosting web applications and websites.\n- Data backup and disaster recovery.\n- Big data analytics and machine learning workloads.\n- DevOps automation and CI/CD pipelines."  
    }
  },
  {
    "id": "space-devops-quick-tips",
    "type": "notes",
    "title": "DevOps Quick Tips",
    "folderId": "mock-folder",
    "settings": {},
    "data": {
      "content": "# 🚀 DevOps Quick Tips\n\nThese quick practices can help streamline your development and operations workflow:\n\n## 🔧 Automation\n\n- **CI/CD Pipelines**: Set up automated builds, tests, and deployments using tools like GitHub Actions, GitLab CI, or Jenkins.\n- **Infrastructure as Code (IaC)**: Manage cloud resources declaratively using Terraform or AWS CloudFormation.\n\n## 📊 Monitoring & Logging\n\n- **Prometheus & Grafana**: Use Prometheus for time-series metrics and Grafana for visual dashboards.\n- **ELK Stack (Elasticsearch, Logstash, Kibana)**: Centralize and visualize application logs.\n\n## 🔐 Security Best Practices\n\n- Rotate secrets using tools like HashiCorp Vault.\n- Use static code analysis tools like SonarQube.\n- Regularly patch dependencies and containers.\n\n## 🌩️ Cloud Readiness\n\n- Design for failure with redundancy and backups.\n- Use container orchestration platforms like Kubernetes for scalable deployments.\n- Optimize costs with auto-scaling and spot instances."
    }
  },
  {
    "id": "space-002",
    "title": "Cloud Computing",
    "type": "openended",
    "settings": {
      "generatedTypes": [
        "studyguide",
        "flashcards",
        "quiz",
        "openended"
      ]
    }
  },
  {
    "id": "space-003",
    "title": "CSCI369",
    "type": "flashcards",
    "settings": {
      "generatedTypes": [
        "openended"
      ]
    }
  },
  {
    "id": "space-004",
    "title": "CSCI321",
    "type": "studyguide",
    "settings": {
      "generatedTypes": [
        "studyguide"
      ]
    }
  },
  {
    "id": "space-005",
    "title": "ISIT216",
    "type": "quiz",
    "settings": {
      "generatedTypes": [
        "studyguide",
        "flashcards"
      ]
    }
  },
  {
    "id": "space-006",
    "title": "CSIT314",
    "type": "openended",
    "settings": {
      "generatedTypes": [
        "studyguide",
        "flashcards",
        "openended"
      ]
    }
  }
]